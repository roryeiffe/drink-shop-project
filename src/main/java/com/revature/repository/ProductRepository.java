package com.revature.repository;

import com.revature.model.Product;
import com.revature.util.ConnectionFactory;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

// Create a Class that connects to our h2 database and finds all products within the table. It should also have methods to
// filter products in the list by name and/or category. All methods will return a list of products.
public class ProductRepository {
	public List<Product> findAll() {
        // Create a Product list to return
        List<Product> products = new ArrayList<>();
        // Connect to the database using a try with resources block
        try (Connection conn = ConnectionFactory.getInstance().getConnection()) {
            // Generate a sql query to find all products
            String sql = "SELECT * FROM products";
            // Create a prepared statement
            PreparedStatement ps = conn.prepareStatement(sql);
            // Execute the query
            ResultSet rs = ps.executeQuery();
            // Check if query successful, iterate through the results creating a new Product object for each row
            if (!rs.next()) throw new RuntimeException("No products found");
            // and add it to a list. If successful, return the list.
            while (rs.next()) {
                // The following code was generated by CodeWhisperer and results in a compiler error, since the constructor is not defined
                // products.add(new Product(rs.getInt("id"), rs.getString("name"), rs.getDouble("price")));
                products.add(new Product(rs.getString("name"), rs.getDouble("price"), rs.getInt("calories"), rs.getString("category")));
            }
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
        return products;

    }

    public List<Product> findByName(String name) {
        // Create a Product list to return
        List<Product> products = new ArrayList<>();

        // Connect to the database using a try with resources block
        try (Connection conn = ConnectionFactory.getInstance().getConnection()) {
            // Generate a sql query to find all products
            String sql = "SELECT * FROM products WHERE LOWER(name) LIKE lower(?)";
            // Create a prepared statement
            PreparedStatement ps = conn.prepareStatement(sql);
            // Set the parameter for the prepared statement
            ps.setString(1, "%" + name + "%");
            System.out.println(name);
            // Execute the query
            ResultSet rs = ps.executeQuery();
            // Check if query successful, iterate through the results creating a new Product object for each row
            // and add it to a list. If successful, return the list.
            while (rs.next()) {
                // The following code was generated by CodeWhisperer and results in a compiler error, since the constructor is not defined
                // products.add(new Product(rs.getInt("id"), rs.getString("name"), rs.getDouble("price")));
                products.add(new Product(rs.getString("name"), rs.getDouble("price"), rs.getInt("calories"), rs.getString("category")));
            }
        } catch (SQLException e) {
            throw new RuntimeException(e);
            // The following code was generated by CodeWhisperer even though it is technically unreachable:
            // return products;
        }
        return products;
    }

}
